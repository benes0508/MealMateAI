#version: '3.8'

# Docker Compose with optimized caching for faster rebuilds
# Key optimizations:
# - Shared pip cache volumes across all Python services
# - Multi-stage builds with dedicated dependency layers
# - BuildKit cache mounts for package downloads

services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"  # Expose the frontend on port 80
    environment:
      - VITE_API_URL=http://localhost:3000/api
    depends_on:
      - api-gateway
    restart: always

  api-gateway:
    build: 
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:4000"  # Expose on port 3000 to match frontend expectations
    environment:
      - USER_SERVICE_URL=http://user-service:8000
      - RECIPE_SERVICE_URL=http://recipe-service:8001
      - MEAL_PLANNER_SERVICE_URL=http://meal-planner-service:8002
      - JWT_SECRET=your-secret-key-for-development-only
      - CORS_ORIGIN=http://localhost
    depends_on:
      - user-service
      - recipe-service
      - meal-planner-service
    restart: always

  user-service:
    build: 
      context: ./services/user-service
      dockerfile: Dockerfile
      # Enable BuildKit for cache mounts
      target: production
    ports:
      - "8000:8000"
    environment:
      - MYSQL_USER=user_service_user
      - MYSQL_PASSWORD=user_service_password
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=user_service_db
      - JWT_SECRET_KEY=your-secret-key-for-development-only  # Must match api-gateway's JWT_SECRET
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRATION_MINUTES=1440
    depends_on:
      - mysql
    restart: always
    volumes:
      - ./services/user-service:/app
      - pip_cache:/pip_cache  # Shared pip cache
      - /app/__pycache__
      - /app/app/__pycache__
      - /app/app/controllers/__pycache__
      - /app/app/models/__pycache__
      - /app/app/repositories/__pycache__
      - /app/app/services/__pycache__

  mysql:
    image: mysql:8.0
    ports:
      - "13306:3306"  # Changed from 3306:3306 to avoid conflict
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=user_service_db
      - MYSQL_USER=user_service_user
      - MYSQL_PASSWORD=user_service_password
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always

  recipe-service:
    build:
      context: ./services/recipe-service
      dockerfile: Dockerfile
      target: production
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://recipe_user:recipe_password@postgres:5432/recipe_db
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - QDRANT_URL=http://qdrant:6333
    depends_on:
      - postgres
      - qdrant
    restart: always
    volumes:
      - ./services/recipe-service:/app
      - pip_cache:/pip_cache  # Shared pip cache
      - huggingface_cache:/root/.cache/huggingface  # Cache for sentence transformers
      - torch_cache:/root/.cache/torch  # Cache for PyTorch models

  postgres:
    image: pgvector/pgvector:pg15
    ports:
      - "15432:5432"  # Changed from 5432:5432 to avoid conflict
    environment:
      - POSTGRES_DB=recipe_db
      - POSTGRES_USER=recipe_user
      - POSTGRES_PASSWORD=recipe_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/recipe-service/init.sql:/docker-entrypoint-initdb.d/01-recipe-init.sql:ro
      - ./services/meal-planner-service/init.sql:/docker-entrypoint-initdb.d/02-meal-planner-init.sql:ro
    restart: always

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-mealmate
    ports:
      - '6333:6333'
    volumes:
      - './qdrant_data:/qdrant/storage'
    environment:
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
    restart: unless-stopped

  meal-planner-service:
    build:
      context: ./services/meal-planner-service
      dockerfile: Dockerfile
      target: production
    ports:
      - "8002:8002"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://meal_planner_user:meal_planner_password@postgres:5432/meal_planner_db
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - POSTGRES_USER=meal_planner_user
      - POSTGRES_PASSWORD=meal_planner_password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=meal_planner_db
      - USER_SERVICE_URL=http://user-service:8000
      - RECIPE_SERVICE_URL=http://recipe-service:8001
    depends_on:
      - postgres
      - user-service
      - recipe-service
    restart: always
    volumes:
      - ./services/meal-planner-service:/app
      - pip_cache:/pip_cache  # Shared pip cache
      - /app/__pycache__
      - /app/app/__pycache__
      - /app/app/controllers/__pycache__
      - /app/app/models/__pycache__
      - /app/app/repositories/__pycache__
      - /app/app/services/__pycache__

volumes:
  mysql_data:
  postgres_data:
  # Caching volumes for faster rebuilds
  pip_cache:
    driver: local
  huggingface_cache:
    driver: local
  torch_cache:
    driver: local